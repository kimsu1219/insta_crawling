{"id":"node_modules/jszip/lib/nodejsUtils.js","dependencies":[{"name":"C:\\Users\\jacol\\Desktop\\0520_socket\\package.json","includedInParent":true,"mtime":1590136789528},{"name":"C:\\Users\\jacol\\Desktop\\0520_socket\\node_modules\\jszip\\package.json","includedInParent":true,"mtime":1590127127208},{"name":"buffer","parent":"C:\\Users\\jacol\\Desktop\\0520_socket\\node_modules\\jszip\\lib\\nodejsUtils.js","resolved":"C:\\Users\\jacol\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nmodule.exports = {\n    /**\n     * True if this is running in Nodejs, will be undefined in a browser.\n     * In a browser, browserify won't include this file and the whole module\n     * will be resolved an empty object.\n     */\n    isNode : typeof Buffer !== \"undefined\",\n    /**\n     * Create a new nodejs Buffer from an existing content.\n     * @param {Object} data the data to pass to the constructor.\n     * @param {String} encoding the encoding to use.\n     * @return {Buffer} a new Buffer.\n     */\n    newBufferFrom: function(data, encoding) {\n        if (Buffer.from && Buffer.from !== Uint8Array.from) {\n            return Buffer.from(data, encoding);\n        } else {\n            if (typeof data === \"number\") {\n                // Safeguard for old Node.js versions. On newer versions,\n                // Buffer.from(number) / Buffer(number, encoding) already throw.\n                throw new Error(\"The \\\"data\\\" argument must not be a number\");\n            }\n            return new Buffer(data, encoding);\n        }\n    },\n    /**\n     * Create a new nodejs Buffer with the specified size.\n     * @param {Integer} size the size of the buffer.\n     * @return {Buffer} a new Buffer.\n     */\n    allocBuffer: function (size) {\n        if (Buffer.alloc) {\n            return Buffer.alloc(size);\n        } else {\n            var buf = new Buffer(size);\n            buf.fill(0);\n            return buf;\n        }\n    },\n    /**\n     * Find out if an object is a Buffer.\n     * @param {Object} b the object to test.\n     * @return {Boolean} true if the object is a Buffer, false otherwise.\n     */\n    isBuffer : function(b){\n        return Buffer.isBuffer(b);\n    },\n\n    isStream : function (obj) {\n        return obj &&\n            typeof obj.on === \"function\" &&\n            typeof obj.pause === \"function\" &&\n            typeof obj.resume === \"function\";\n    }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jszip/lib/nodejsUtils.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}}],"sources":{"node_modules/jszip/lib/nodejsUtils.js":"'use strict';\n\nmodule.exports = {\n    /**\n     * True if this is running in Nodejs, will be undefined in a browser.\n     * In a browser, browserify won't include this file and the whole module\n     * will be resolved an empty object.\n     */\n    isNode : typeof Buffer !== \"undefined\",\n    /**\n     * Create a new nodejs Buffer from an existing content.\n     * @param {Object} data the data to pass to the constructor.\n     * @param {String} encoding the encoding to use.\n     * @return {Buffer} a new Buffer.\n     */\n    newBufferFrom: function(data, encoding) {\n        if (Buffer.from && Buffer.from !== Uint8Array.from) {\n            return Buffer.from(data, encoding);\n        } else {\n            if (typeof data === \"number\") {\n                // Safeguard for old Node.js versions. On newer versions,\n                // Buffer.from(number) / Buffer(number, encoding) already throw.\n                throw new Error(\"The \\\"data\\\" argument must not be a number\");\n            }\n            return new Buffer(data, encoding);\n        }\n    },\n    /**\n     * Create a new nodejs Buffer with the specified size.\n     * @param {Integer} size the size of the buffer.\n     * @return {Buffer} a new Buffer.\n     */\n    allocBuffer: function (size) {\n        if (Buffer.alloc) {\n            return Buffer.alloc(size);\n        } else {\n            var buf = new Buffer(size);\n            buf.fill(0);\n            return buf;\n        }\n    },\n    /**\n     * Find out if an object is a Buffer.\n     * @param {Object} b the object to test.\n     * @return {Boolean} true if the object is a Buffer, false otherwise.\n     */\n    isBuffer : function(b){\n        return Buffer.isBuffer(b);\n    },\n\n    isStream : function (obj) {\n        return obj &&\n            typeof obj.on === \"function\" &&\n            typeof obj.pause === \"function\" &&\n            typeof obj.resume === \"function\";\n    }\n};\n"},"lineCount":59}},"error":null,"hash":"477969104b744e7a9ca345f868fd91b6","cacheData":{"env":{}}}